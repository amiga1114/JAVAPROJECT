*&---------------------------------------------------------------------*
*&  Include           ZEDR22_12_F01
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&      Form  GET_DATA
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM get_data .



  CLEAR : gt_data, gt_data[].

  IF go_mseg IS NOT BOUND.
    CREATE OBJECT go_mseg.
  ENDIF.

  CALL METHOD go_mseg->get_mseg
    EXPORTING
      e_mjahr   = p_mjahr
      e_mblnr_l = s_mblnr-low
      e_mblnr_h = s_mblnr-high
    IMPORTING
      it_list   = gt_data[].

  IF gt_data[] IS INITIAL.
    MESSAGE s000 WITH 'DATA NOT FOUND'.
    LEAVE LIST-PROCESSING.
  ENDIF.

  LOOP AT gt_data.
    MOVE-CORRESPONDING gt_data TO gt_data2.

    IF gt_data2-vgart EQ 'WL'.
      gt_data2-color = 'C610'.
    ENDIF.

    APPEND gt_data2.
    CLEAR gt_data2.
  ENDLOOP.


*  SELECT a~mjahr a~mblnr b~zeile a~vgart a~budat b~bwart b~matnr c~maktx b~werks
*         d~werks_name AS name1 b~dmbtr b~waers b~menge b~meins
*    INTO CORRESPONDING FIELDS OF gt_data
*    FROM mkpf AS a
*    INNER JOIN mseg AS b
*            ON a~mjahr = b~mjahr
*           AND a~mblnr = b~mblnr
*    INNER JOIN makt AS c
*            ON b~matnr = c~matnr
*    INNER JOIN t001w AS d
*            ON b~werks = d~werks
*    WHERE a~mjahr EQ p_mjahr
*      AND a~mblnr IN s_mblnr.


*    IF sy-subrc NE 0.
*      MESSAGE 'DATA NOT FOUND' TYPE 'S'.
*      LEAVE TO LIST-PROCESSING.
*    ENDIF.
*
*    DATA : lv_index LIKE sy-tabix.
*
*    LOOP AT gt_data.
*      lv_index = sy-tabix.
*
*      IF gt_data-vgart = 'WL'.
*        gt_data-color = 'C610'.
*      ENDIF.
*
*      MODIFY gt_data INDEX lv_index TRANSPORTING vgart color.
*
*    ENDLOOP.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SET_FCAT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_0065   text
*      -->P_0066   text
*      -->P_0067   text
*      -->P_0068   text
*      -->P_0069   text
*----------------------------------------------------------------------*
FORM set_fcat  USING p_key p_field p_text p_ref_table p_ref_field.
  gs_fcat-key = p_key.
  gs_fcat-fieldname = p_field.
  gs_fcat-coltext = p_text.
  gs_fcat-ref_table = p_ref_table.
  gs_fcat-ref_field = p_ref_field.

  CASE p_field.
    WHEN 'DMBTR'.
      gs_fcat-cfieldname = 'WAERS'.
    WHEN 'MENGE'.
      gs_fcat-qfieldname = 'MEINS'.
  ENDCASE.

  APPEND gs_fcat TO gt_fcat.
  CLEAR gs_fcat.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  DOUBLE_CLICK
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_E_ROW  text
*      -->P_E_COLUMN  text
*      -->P_ES_ROW_NO  text
*----------------------------------------------------------------------*
FORM double_click  USING    p_row STRUCTURE lvc_s_row
                            p_column STRUCTURE lvc_s_col
                            ps_row_no STRUCTURE lvc_s_roid.

  READ TABLE gt_data2 INDEX p_row-index.

  IF sy-subrc EQ 0.
    SET PARAMETER ID : 'MJA' FIELD gt_data2-mjahr,
                       'MBN' FIELD gt_data2-mblnr.


    CALL TRANSACTION 'MB03' AND SKIP FIRST SCREEN.
  ENDIF.


ENDFORM.

----------------------------------------------------------------------------------
Extracted by Direct Download Enterprise version 1.3.1 - E.G.Mellodew. 1998-2005 UK. Sap Release 750
