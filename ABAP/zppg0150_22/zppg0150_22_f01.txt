*&---------------------------------------------------------------------*
*&  Include           ZPPG0150_22_F01
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&      Form  GET_DATA
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM get_data .
  SELECT *
    INTO CORRESPONDING FIELDS OF TABLE gt_data
  FROM zppg0150t
    WHERE userid = sy-uname
      AND werks  = p_werks
      AND budat  = p_budat.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  INIT_ALV_0100
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM init_alv_0100 .

*-- container, grid 객체 생성
  PERFORM create_object.

*-- alv의 layout 설정
  PERFORM set_layout.

*-- field catalog 설정
  PERFORM make_field_catalog.

*-- alv display
  PERFORM alv_display.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  CREATE_OBJECT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM create_object .

  CREATE OBJECT go_doc_cont
    EXPORTING
      side      = 1
      extension = 3000.

  "alv 객체생성
  CREATE OBJECT go_grid
    EXPORTING
      i_parent = go_doc_cont.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SET_LAYOUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM set_layout .

  gs_layo-zebra = 'X'.
  gs_layo-cwidth_opt = 'X'.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  MAKE_FIELD_CATALOG
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM make_field_catalog .

  PERFORM append_fcat USING : 'X' 'IFSEQ'           'I/F Seq',
                              'X' 'WERKS'           'Plant',
                              'X' 'ARBPL'           'Work center',
                              'X' 'EQUNR'	          'Machine',
                              'X' 'LOGRP'	          'Shift',
                              'X' 'VAART'	          'Processing Type',
                              'X' 'MATNR'	          'Material Number',
                              'X' 'KUNNR'	          'Customer Number',
                              'X' 'CHARG'	          'Batch Number',
                              ' ' 'BUDAT'	          'Posting Date in the Document',
                              ' ' 'PDDAT'	          'Production Date',
                              ' ' 'ERFMG'           'Quantity in unit of entry',
                              ' ' 'MEINS'	          'Base Unit of Measure',
                              ' ' 'MFLAG'           'Sales Mapping Process Flag',
                              ' ' 'MSTAT'	          'Processing Status',
                              ' ' 'LOT_NUMBER	Lot'  'Number',
                              ' ' 'SERIAL_NO'	      'Serial No',
                              ' ' 'DELIVERY_FLAG'   'Delivery Flag',
                              ' ' 'DELIVERY_QTY'    'Delivery Qty',
                              ' ' 'ALORT'           'Receiving storage location for repetitive manufacturing',
                              ' ' 'PRTNR'	          'Confirmation number',
                              ' ' 'CANCPRTNR'	      'Backflush number of the reversal',
                              ' ' 'MBLNR'	          'Number of Material Document'.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  ALV_DISPLAY
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM alv_display .
  CALL METHOD go_grid->set_table_for_first_display
    EXPORTING
*     is_variant      =
*     i_save          =
*     i_default       = 'X'
      is_layout       = gs_layo
    CHANGING
      it_outtab       = gt_data[]
      it_fieldcatalog = gt_fcat.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  APPEND_FCAT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_0063   text
*      -->P_0064   text
*      -->P_0065   text
*----------------------------------------------------------------------*
FORM append_fcat  USING   p_key
                          p_field
                          p_fname.

  gs_fcat-key = p_key.
  gs_fcat-fieldname = p_field.
  gs_fcat-coltext = p_fname.

  APPEND gs_fcat TO gt_fcat.
  CLEAR gs_fcat.

ENDFORM.

*&---------------------------------------------------------------------*
*&      Form  PROCESS_DATA
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM process_data .

  DATA: ls_flags   TYPE bapi_rm_flg,
        ls_datagen TYPE bapi_rm_datgen,
        lv_conf    TYPE bapi_rm_datkey-confirmation,
        ls_return  TYPE bapiret2.

  LOOP AT gt_data.

    CASE gt_data-vaart.
      WHEN 'A1'.
        ls_flags-bckfltype  = '01'.
      WHEN 'A2'.
        ls_flags-bckfltype  = '21'.
    ENDCASE.

    ls_datagen-materialnr    = gt_data-matnr .
    ls_datagen-prodplant     = gt_data-werks .
    ls_datagen-prodversion   = gt_data-verid .
    ls_datagen-batch         = gt_data-charg .
    ls_datagen-postdate      = gt_data-budat .
    ls_datagen-docdate       = gt_data-budat .
    ls_datagen-backflquant   = gt_data-erfmg .
    ls_datagen-unitofmeasure = gt_data-meins .
    ls_datagen-docheadertxt  = gt_data-logrp.

    CALL FUNCTION 'BAPI_REPMANCONF1_CREATE_MTS'
      EXPORTING
        bflushflags   = ls_flags
        bflushdatagen = ls_datagen
      IMPORTING
        confirmation  = lv_conf
        return        = ls_return.

    IF ls_return-type EQ 'E'.
      gt_data-stat  = icon_red_light.
      gt_data-zmsg   = ls_return-message.
    ELSE.
      gt_data-stat  = icon_green_light.
      gt_data-prtnr = lv_conf.

      CALL FUNCTION 'BAPI_TRANSACTION_COMMIT'
        EXPORTING
          wait = 'X'.

      " 문서번호 찾기
      SELECT SINGLE belnr
        INTO gt_data-mblnr
      FROM blpp
      WHERE prtnr = lv_conf
        AND prtps = '0001'.

      MODIFY gt_data TRANSPORTING stat
                                  zmsg
                                  prtnr
                                  mblnr.
    ENDIF.

    CLEAR : ls_flags, ls_datagen,
            lv_conf,  ls_return.
  ENDLOOP.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  MODIFY_DATA
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM modify_data .

  LOOP AT gt_data.

    SELECT SINGLE verid INTO gt_data-verid
    FROM mkal
    WHERE matnr = gt_data-matnr
      AND werks = gt_data-werks.

    IF sy-subrc = 0.
      MODIFY gt_data TRANSPORTING verid.
    ENDIF.

  ENDLOOP.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SAVE_DATA
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM save_data .

  DATA : lt_0150 TYPE TABLE OF zppg0150t,
         ls_0150 LIKE LINE OF lt_0150.
*         ls_0150 type zppg0150t.

  LOOP AT gt_data.

    MOVE-CORRESPONDING gt_data TO ls_0150.

    ls_0150-aedat = sy-datum.
    ls_0150-aezet = sy-uzeit.
    ls_0150-aenam = sy-uname.

    APPEND ls_0150 TO lt_0150.

    CLEAR : ls_0150, gt_data.

  ENDLOOP.

  MODIFY zppg0150t FROM TABLE lt_0150.

ENDFORM.

----------------------------------------------------------------------------------
Extracted by Direct Download Enterprise version 1.3.1 - E.G.Mellodew. 1998-2005 UK. Sap Release 750
