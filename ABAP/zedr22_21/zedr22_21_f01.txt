*&---------------------------------------------------------------------*
*&  Include           ZEDR22_21_F01
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&      Form  GET_DATA
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM get_data .
  CLEAR : gt_data, gt_data[].

  CASE 'X'.
    WHEN p_stan.
      PERFORM p_stan.


    WHEN p_cbo.
      PERFORM p_cbo.

  ENDCASE.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SET_FCAT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_0021   text
*      -->P_0022   text
*      -->P_0023   text
*      -->P_0024   text
*----------------------------------------------------------------------*
FORM set_fcat  USING    p_key p_field p_text p_ref_table.

  gs_fcat-key       = p_key.
  gs_fcat-fieldname = p_field.
  gs_fcat-coltext   = p_text.
  gs_fcat-ref_table = p_ref_table.

  APPEND gs_fcat TO gt_fcat.
  CLEAR  gs_fcat.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  REFRESH_GRID
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM refresh_grid .
  gs_stable-row = 'X'.
  gs_stable-col = 'X'.

  CALL METHOD go_grid->refresh_table_display
    EXPORTING
      is_stable      = gs_stable
      i_soft_refresh = space.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SAVE_DATA
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM save_data .

  DATA : lt_del_table TYPE TABLE OF ztedu22_02 WITH HEADER LINE.

  CLEAR : lt_del_table, lt_del_table[], gs_row, gt_row.

  CALL METHOD go_grid->get_selected_rows
    IMPORTING
      et_index_rows = gt_row.

  CALL METHOD go_grid->check_changed_data.

  LOOP AT gt_row INTO gs_row.
    READ TABLE gt_data INDEX gs_row-index.

    IF sy-subrc = 0.
      MOVE-CORRESPONDING gt_data TO lt_del_table.

      APPEND lt_del_table.
      CLEAR lt_del_table.
    ENDIF.
  ENDLOOP.

  IF gt_data[] IS NOT INITIAL.
    MODIFY ztedu22_02 FROM TABLE LT_DEL_TABLE. " MODIFY를 사용해 TABLE에 DATA 입력

    IF sy-subrc EQ 0.
      COMMIT WORK AND WAIT. " 다른 일을 하고 있는 경우 기다렸다가 처리함
      MESSAGE s000 WITH 'SAVE SUCCESS'.
      PERFORM get_data.
    ELSE.
      ROLLBACK WORK.
      MESSAGE s000 WITH 'SAVE FAIL' DISPLAY LIKE 'E'.
    ENDIF.
  ENDIF.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  DELETE_DATA
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM delete_data .
  DATA : lt_del_table TYPE TABLE OF ztedu22_02 WITH HEADER LINE.

  CLEAR : lt_del_table, lt_del_table[], gs_row, gt_row.

  CALL METHOD go_grid->get_selected_rows
    IMPORTING
      et_index_rows = gt_row.

  IF gt_row IS INITIAL.
    MESSAGE s000 WITH 'Please Select Row' DISPLAY LIKE 'E'.
    EXIT.
  ENDIF.

  LOOP AT gt_row INTO gs_row.
    READ TABLE gt_data INDEX gs_row-index.

    IF sy-subrc = 0.
      MOVE-CORRESPONDING gt_data TO lt_del_table.

      APPEND lt_del_table.
      CLEAR lt_del_table.
    ENDIF.
  ENDLOOP.

  IF lt_del_table[] IS NOT INITIAL.
    DELETE ztedu22_02 FROM TABLE lt_del_table.

    IF sy-subrc = 0.
      COMMIT WORK AND WAIT.
      MESSAGE s000 WITH 'Delete Success'.

      PERFORM get_data.
    ELSE.
      ROLLBACK WORK.
      MESSAGE s000 WITH 'Delete Fail' DISPLAY LIKE 'E'.

    ENDIF.

  ENDIF.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  P_STAN
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM p_stan .
  SELECT a~matnr b~werks c~maktx a~pstat a~mtart a~matkl d~name1 a~meins
         INTO CORRESPONDING FIELDS OF TABLE gt_data
         FROM mara AS a
         INNER JOIN marc AS b
                 ON a~matnr = b~matnr
         INNER JOIN makt AS c
                 ON a~matnr = c~matnr
                AND c~spras = 'EN'
         INNER JOIN t001w AS d
                 ON b~werks = d~werks
                AND d~spras = 'EN'
         WHERE a~matnr IN s_matnr.

  IF sy-subrc NE 0.
    MESSAGE s000 WITH 'DATA NOT FOUND'.
    LEAVE LIST-PROCESSING.
  ENDIF.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  P_CBO
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM p_cbo .
  SELECT matnr werks maktx pstat mtart matkl name1 meins
          INTO CORRESPONDING FIELDS OF TABLE gt_data
    FROM ztedu22_02
    WHERE matnr IN s_matnr.

  IF sy-subrc NE 0.
    MESSAGE s000 WITH 'DATA NOT FOUND'.
    LEAVE LIST-PROCESSING.
  ENDIF.
ENDFORM.

----------------------------------------------------------------------------------
Extracted by Direct Download Enterprise version 1.3.1 - E.G.Mellodew. 1998-2005 UK. Sap Release 750
